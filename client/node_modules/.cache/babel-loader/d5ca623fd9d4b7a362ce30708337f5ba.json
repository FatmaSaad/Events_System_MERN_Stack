{"ast":null,"code":"import _slicedToArray from \"C:\\\\deee\\\\I.T.I\\\\React\\\\EventsApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\deee\\\\I.T.I\\\\React\\\\EventsApp\\\\client\\\\src\\\\components\\\\FileUpload.jsx\";\nimport React, { Fragment, useState } from \"react\";\nimport Message from \"./Message\";\nimport Progress from \"./Progress\";\nimport axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://localhost:2000/api\"\n});\n\nconst FileUpload = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        file = _useState2[0],\n        setFile = _useState2[1];\n\n  const _useState3 = useState(\"Choose File\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        filename = _useState4[0],\n        setFilename = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        uploadedFile = _useState6[0],\n        setUploadedFile = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        message = _useState8[0],\n        setMessage = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        uploadPercentage = _useState10[0],\n        setUploadPercentage = _useState10[1];\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const res = await axios.post(\"http://localhost:2000/api/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        onUploadProgress: progressEvent => {\n          setUploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total))); // Clear percentage\n\n          setTimeout(() => setUploadPercentage(0), 10000);\n        }\n      });\n      const _res$data = res.data,\n            fileName = _res$data.fileName,\n            filePath = _res$data.filePath;\n      setUploadedFile({\n        fileName,\n        filePath\n      });\n      setMessage(\"File Uploaded\");\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage(\"There was a problem with the server\");\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }\n  }, message ? /*#__PURE__*/React.createElement(Message, {\n    msg: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-file mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"custom-file-input\",\n    id: \"customFile\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"customFile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }\n  }, filename)), /*#__PURE__*/React.createElement(Progress, {\n    percentage: uploadPercentage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Upload\",\n    className: \"btn btn-primary btn-block mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  })), uploadedFile ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, uploadedFile.fileName), /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: \"100%\",\n      height: \"\"\n    },\n    src: uploadedFile.filePath,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }))) : null);\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["C:/deee/I.T.I/React/EventsApp/client/src/components/FileUpload.jsx"],"names":["React","Fragment","useState","Message","Progress","axios","api","create","baseURL","FileUpload","file","setFile","filename","setFilename","uploadedFile","setUploadedFile","message","setMessage","uploadPercentage","setUploadPercentage","onChange","e","target","files","name","onSubmit","preventDefault","formData","FormData","append","res","post","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","setTimeout","data","fileName","filePath","err","response","status","msg","width","height"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport Message from \"./Message\";\r\nimport Progress from \"./Progress\";\r\nimport axios from \"axios\";\r\nconst api = axios.create({\r\n\tbaseURL: \"http://localhost:2000/api\",\r\n});\r\n\r\nconst FileUpload = () => {\r\n\tconst [file, setFile] = useState(\"\");\r\n\tconst [filename, setFilename] = useState(\"Choose File\");\r\n\tconst [uploadedFile, setUploadedFile] = useState({});\r\n\tconst [message, setMessage] = useState(\"\");\r\n\tconst [uploadPercentage, setUploadPercentage] = useState(0);\r\n\r\n\tconst onChange = e => {\r\n\t\tsetFile(e.target.files[0]);\r\n\t\tsetFilename(e.target.files[0].name);\r\n\t};\r\n\r\n\tconst onSubmit = async e => {\r\n\t\te.preventDefault();\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append(\"file\", file);\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await axios.post(\r\n\t\t\t\t\"http://localhost:2000/api/upload\",\r\n\t\t\t\tformData,\r\n\t\t\t\t{\r\n          \r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n          },\r\n\t\t\t\t\tonUploadProgress: progressEvent => {\r\n\t\t\t\t\t\tsetUploadPercentage(\r\n\t\t\t\t\t\t\tparseInt(\r\n\t\t\t\t\t\t\t\tMath.round((progressEvent.loaded * 100) / progressEvent.total),\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t// Clear percentage\r\n\t\t\t\t\t\tsetTimeout(() => setUploadPercentage(0), 10000);\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tconst { fileName, filePath } = res.data;\r\n\r\n\t\t\tsetUploadedFile({ fileName, filePath });\r\n\t\t\tsetMessage(\"File Uploaded\");\r\n\t\t} catch (err) {\r\n\r\n\t\t\tif (err.response.status === 500) {\r\n\t\t\t\tsetMessage(\"There was a problem with the server\");\r\n\t\t\t} else {\r\n\t\t\t\tsetMessage(err.response.data.msg);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{message ? <Message msg={message} /> : null}\r\n\t\t\t<form onSubmit={onSubmit}>\r\n\t\t\t\t<div className=\"custom-file mb-4\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\tclassName=\"custom-file-input\"\r\n\t\t\t\t\t\tid=\"customFile\"\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n\t\t\t\t\t\t{filename}\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Progress percentage={uploadPercentage} />\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tvalue=\"Upload\"\r\n\t\t\t\t\tclassName=\"btn btn-primary btn-block mt-4\"\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t\t{uploadedFile ? (\r\n\t\t\t\t<div className=\"row mt-5\">\r\n\t\t\t\t\t<div className=\"col-md-6 m-auto\">\r\n\t\t\t\t\t\t<h3 className=\"text-center\">{uploadedFile.fileName}</h3>\r\n\t\t\t\t\t\t<img style={{ width: \"100%\" ,height:\"\"}} src={uploadedFile.filePath} alt=\"\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t) : null}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default FileUpload;\r\n"]},"metadata":{},"sourceType":"module"}