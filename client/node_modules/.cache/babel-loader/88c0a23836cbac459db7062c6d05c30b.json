{"ast":null,"code":"var _jsxFileName = \"E:\\\\deee\\\\I.T.I\\\\React\\\\EventsApp\\\\client\\\\src\\\\components\\\\FileUpload.jsx\";\nimport React, { Fragment, useState } from \"react\";\nimport Message from \"./Message\";\nimport Progress from \"./Progress\";\nimport axios from \"axios\";\n\nconst FileUpload = props => {\n  const [file, setFile] = useState(\"\");\n  const [filename, setFilename] = useState(\"Choose File\");\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n  console.log(props.Key);\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const onSubmit = async e => {\n    console.log(e);\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    console.log(\"formData\");\n    console.log(formData);\n\n    try {\n      // if(props.Key==\"fromSpeaker\")\n      // {\n      //   const res = await axios.post('http://localhost:2000/api/upload', formData, {\n      //     headers: {\n      //       'Content-Type': 'multipart/form-data'\n      //     },\n      // }else if{\n      //   const res = await axios.post('http://localhost:2000/api/upload', formData, {\n      //     headers: {\n      //       'Content-Type': 'multipart/form-data'\n      //     }\n      // },\n      let res;\n\n      if (props.Key == \"fromSpeaker\") {\n        res = await axios.post(\"http://localhost:2000/api/speaker/upload\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          },\n          onUploadProgress: progressEvent => {\n            setUploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total))); // Clear percentage\n\n            setTimeout(() => setUploadPercentage(0), 10000);\n          }\n        });\n      } else if (props.Key == \"fromEvent\") {\n        res = await axios.post(\"http://localhost:2000/api/event/upload\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          },\n          onUploadProgress: progressEvent => {\n            setUploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total)));\n            setTimeout(() => setUploadPercentage(0), 10000);\n          }\n        });\n      }\n\n      const {\n        fileName,\n        filePath\n      } = res.data;\n      setUploadedFile({\n        fileName,\n        filePath\n      });\n      setMessage(\"File Uploaded\");\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage(\"There was a problem with the server\");\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 3\n    }\n  }, message ? /*#__PURE__*/React.createElement(Message, {\n    msg: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-file mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"custom-file-input\",\n    id: \"customFile\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"customFile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 6\n    }\n  }, filename)), /*#__PURE__*/React.createElement(Progress, {\n    percentage: uploadPercentage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Upload\",\n    className: \"btn btn-primary btn-block mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  })), uploadedFile ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, uploadedFile.fileName), /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: \"100%\"\n    },\n    src: \"./../public/uploads/\" + uploadedFile.filePath,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }))) : null);\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["E:/deee/I.T.I/React/EventsApp/client/src/components/FileUpload.jsx"],"names":["React","Fragment","useState","Message","Progress","axios","FileUpload","props","file","setFile","filename","setFilename","uploadedFile","setUploadedFile","message","setMessage","uploadPercentage","setUploadPercentage","console","log","Key","onChange","e","target","files","name","onSubmit","preventDefault","formData","FormData","append","res","post","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","setTimeout","fileName","filePath","data","err","response","status","msg","width"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport Message from \"./Message\";\r\nimport Progress from \"./Progress\";\r\nimport axios from \"axios\";\r\nconst FileUpload = props => {\r\n\tconst [file, setFile] = useState(\"\");\r\n\tconst [filename, setFilename] = useState(\"Choose File\");\r\n\tconst [uploadedFile, setUploadedFile] = useState({});\r\n\tconst [message, setMessage] = useState(\"\");\r\n\tconst [uploadPercentage, setUploadPercentage] = useState(0);\r\n\tconsole.log(props.Key);\r\n\r\n\tconst onChange = e => {\r\n\t\tsetFile(e.target.files[0]);\r\n\t\tsetFilename(e.target.files[0].name);\r\n\t};\r\n\r\n\tconst onSubmit = async e => {\r\n\t\tconsole.log(e);\r\n\t\te.preventDefault();\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append(\"file\", file);\r\n\t\tconsole.log(\"formData\");\r\n\t\tconsole.log(formData);\r\n\t\ttry {\r\n\t\t\t// if(props.Key==\"fromSpeaker\")\r\n\t\t\t// {\r\n\t\t\t//   const res = await axios.post('http://localhost:2000/api/upload', formData, {\r\n\t\t\t//     headers: {\r\n\t\t\t//       'Content-Type': 'multipart/form-data'\r\n\t\t\t//     },\r\n\t\t\t// }else if{\r\n\t\t\t//   const res = await axios.post('http://localhost:2000/api/upload', formData, {\r\n\t\t\t//     headers: {\r\n\t\t\t//       'Content-Type': 'multipart/form-data'\r\n\t\t\t//     }\r\n\t\t\t// },\r\n\t\t\tlet res;\r\n\t\t\tif (props.Key == \"fromSpeaker\") {\r\n\t\t\t\tres = await axios.post(\"http://localhost:2000/api/speaker/upload\", formData, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonUploadProgress: progressEvent => {\r\n\t\t\t\t\t\tsetUploadPercentage(\r\n\t\t\t\t\t\t\tparseInt(\r\n\t\t\t\t\t\t\t\tMath.round((progressEvent.loaded * 100) / progressEvent.total),\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t// Clear percentage\r\n\t\t\t\t\t\tsetTimeout(() => setUploadPercentage(0), 10000);\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t} else if (props.Key == \"fromEvent\") {\r\n\t\t\t\tres = await axios.post(\"http://localhost:2000/api/event/upload\", formData, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonUploadProgress: progressEvent => {\r\n\t\t\t\t\t\tsetUploadPercentage(\r\n\t\t\t\t\t\t\tparseInt(\r\n\t\t\t\t\t\t\t\tMath.round((progressEvent.loaded * 100) / progressEvent.total),\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tsetTimeout(() => setUploadPercentage(0), 10000);\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tconst { fileName, filePath } = res.data;\r\n\r\n\t\t\tsetUploadedFile({ fileName, filePath });\r\n\r\n\t\t\tsetMessage(\"File Uploaded\");\r\n\t\t} catch (err) {\r\n\t\t\tif (err.response.status === 500) {\r\n\t\t\t\tsetMessage(\"There was a problem with the server\");\r\n\t\t\t} else {\r\n\t\t\t\tsetMessage(err.response.data.msg);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{message ? <Message msg={message} /> : null}\r\n\t\t\t<form onSubmit={onSubmit}>\r\n\t\t\t\t<div className=\"custom-file mb-4\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\tclassName=\"custom-file-input\"\r\n\t\t\t\t\t\tid=\"customFile\"\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n\t\t\t\t\t\t{filename}\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Progress percentage={uploadPercentage} />\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tvalue=\"Upload\"\r\n\t\t\t\t\tclassName=\"btn btn-primary btn-block mt-4\"\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t\t{uploadedFile ? (\r\n\t\t\t\t<div className=\"row mt-5\">\r\n\t\t\t\t\t<div className=\"col-md-6 m-auto\">\r\n\t\t\t\t\t\t<h3 className=\"text-center\">{uploadedFile.fileName}</h3>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\r\n\t\t\t\t\t\t\tsrc={\"./../public/uploads/\" + uploadedFile.filePath}\r\n\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t) : null}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default FileUpload;\r\n"]},"metadata":{},"sourceType":"module"}