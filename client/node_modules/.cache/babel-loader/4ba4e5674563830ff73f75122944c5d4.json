{"ast":null,"code":"// import React, { Component } from \"react\";\n// import ReactTable from \"react-table\";\n// import api from \"../../api\";\n// import styled from \"styled-components\";\n// // import \"react-table/react-table.css\";\n// const Wrapper = styled.div`\n// \tpadding: 0 40px 40px 40px;\n// `;\n// const Update = styled.div`\n// \tcolor: #ef9b0f;\n// \tcursor: pointer;\n// `;\n// const Delete = styled.div`\n// \tcolor: #ff0000;\n// \tcursor: pointer;\n// `;\n// class UpdateSpeaker extends Component {\n// \tupdateSpeakerById = event => {\n// \t\tevent.preventDefault();\n// \t\tconsole.log(\"id : \" + this.props.id);\n// \t\twindow.location.href = `/speakers/update/${this.props.id}`;\n// \t};\n// \trender() {\n// \t\treturn <Update onClick={this.updateSpeakerById}>Update</Update>;\n// \t}\n// }\n// class DeleteSpeaker extends Component {\n// \tdeleteUser = event => {\n// \t\tevent.preventDefault();\n// \t\tif (\n// \t\t\twindow.confirm(\n// \t\t\t\t`Do tou want to delete the speaker ${this.props.id} permanently?`,\n// \t\t\t)\n// \t\t) {\n// \t\t\tapi.deleteSpeakerById(this.props.id);\n// \t\t\twindow.location.reload();\n// \t\t}\n// \t};\n// \trender() {\n// \t\treturn <Delete onClick={this.deleteUser}>Delete</Delete>;\n// \t}\n// }\n// class SpeakersList extends Component {\n// \tconstructor(props) {\n// \t\tsuper(props);\n// \t\tconsole.log(\"props : \" + props);\n// \t\tthis.state = {\n// \t\t\tspeakers: [],\n// \t\t\tcolumns: [],\n// \t\t\tisLoading: false,\n// \t\t};\n// \t}\n// \tcomponentDidMount = async () => {\n// \t\tthis.setState({ isLoading: true });\n// \t\tawait api.getAllSpeakers().then(speakers => {\n// \t\t\tconsole.log(speakers.data.data);\n// \t\t\tthis.setState({\n// \t\t\t\tspeakers: speakers.data.data,\n// \t\t\t\tisLoading: false,\n// \t\t\t});\n// \t\t\tconsole.log(this.state.speakers[0]);\n// \t\t});\n// \t};\n// \trender() {\n// \t\tconst { speakers, isLoading } = this.state;\n// \t\tconsole.log(\"props : \" + this.props);\n// \t\tconst columns = [\n// \t\t\t{\n// \t\t\t\tHeader: \"ID\",\n// \t\t\t\taccessor: \"_id\",\n// \t\t\t\tfilterable: true,\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tHeader: \"Name\",\n// \t\t\t\taccessor: \"name\",\n// \t\t\t\tfilterable: true,\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tHeader: \"User Name\",\n// \t\t\t\taccessor: \"UserName\",\n// \t\t\t\tfilterable: true,\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tHeader: \"Email\",\n// \t\t\t\taccessor: \"email\",\n// \t\t\t\tfilterable: true,\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tHeader: \"Age\",\n// \t\t\t\taccessor: \"age\",\n// \t\t\t\tfilterable: true,\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tHeader: \"Street\",\n// \t\t\t\taccessor: \"street\",\n// \t\t\t\tfilterable: true,\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tHeader: \"City\",\n// \t\t\t\taccessor: \"city\",\n// \t\t\t\tfilterable: true,\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tHeader: \"Building\",\n// \t\t\t\taccessor: \"building\",\n// \t\t\t\tfilterable: true,\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tHeader: \"\",\n// \t\t\t\taccessor: \"\",\n// \t\t\t\tCell: function(props) {\n// \t\t\t\t\treturn (\n// \t\t\t\t\t\t<span>\n// \t\t\t\t\t\t\t<DeleteSpeaker id={props.original._id} />\n// \t\t\t\t\t\t</span>\n// \t\t\t\t\t);\n// \t\t\t\t},\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tHeader: \"\",\n// \t\t\t\taccessor: \"\",\n// \t\t\t\tCell: function(props) {\n// \t\t\t\t\treturn (\n// \t\t\t\t\t\t<span>\n// \t\t\t\t\t\t\t<UpdateSpeaker id={props.original._id} />\n// \t\t\t\t\t\t</span>\n// \t\t\t\t\t);\n// \t\t\t\t},\n// \t\t\t},\n// \t\t];\n// \t\tconsole.log(this.state.speakers);\n// \t\tlet showTable = true;\n// \t\tif (!speakers.length) {\n// \t\t\tshowTable = false;\n// \t\t\tconsole.log(\"false\");\n// \t\t\treturn (<div>false</div>);\n// \t\t}\n// \t\tconsole.log(this.state.speakers);\n// \t\tconsole.log(columns);\n// \t\treturn (\n// \t\t\t<Wrapper>\n// \t\t\t\t{showTable && (\n// \t\t\t\t\t<ReactTable\n// \t\t\t\t\t\tdata={speakers}\n// \t\t\t\t\t\tcolumns={columns}\n// \t\t\t\t\t\tloading={isLoading}\n// \t\t\t\t\t\tdefaultPageSize={10}\n// \t\t\t\t\t\tshowPageSizeOptions={true}\n// \t\t\t\t\t\tminRows={0}\n// \t\t\t\t\t/>\n// \t\t\t\t)}\n// \t\t\t</Wrapper>\n// \t\t);\n// \t}\n// }\n// export default SpeakersList;","map":{"version":3,"sources":["E:/deee/I.T.I/React/EventsApp/client/src/pages/Events/EventsList.jsx"],"names":[],"mappingssourcesContent":["// import React, { Component } from \"react\";\r\n// import ReactTable from \"react-table\";\r\n// import api from \"../../api\";\r\n\r\n// import styled from \"styled-components\";\r\n\r\n// // import \"react-table/react-table.css\";\r\n\r\n// const Wrapper = styled.div`\r\n// \tpadding: 0 40px 40px 40px;\r\n// `;\r\n\r\n// const Update = styled.div`\r\n// \tcolor: #ef9b0f;\r\n// \tcursor: pointer;\r\n// `;\r\n\r\n// const Delete = styled.div`\r\n// \tcolor: #ff0000;\r\n// \tcursor: pointer;\r\n// `;\r\n\r\n// class UpdateSpeaker extends Component {\r\n// \tupdateSpeakerById = event => {\r\n// \t\tevent.preventDefault();\r\n// \t\tconsole.log(\"id : \" + this.props.id);\r\n// \t\twindow.location.href = `/speakers/update/${this.props.id}`;\r\n// \t};\r\n\r\n// \trender() {\r\n// \t\treturn <Update onClick={this.updateSpeakerById}>Update</Update>;\r\n// \t}\r\n// }\r\n// class DeleteSpeaker extends Component {\r\n// \tdeleteUser = event => {\r\n// \t\tevent.preventDefault();\r\n\r\n// \t\tif (\r\n// \t\t\twindow.confirm(\r\n// \t\t\t\t`Do tou want to delete the speaker ${this.props.id} permanently?`,\r\n// \t\t\t)\r\n// \t\t) {\r\n// \t\t\tapi.deleteSpeakerById(this.props.id);\r\n// \t\t\twindow.location.reload();\r\n// \t\t}\r\n// \t};\r\n\r\n// \trender() {\r\n// \t\treturn <Delete onClick={this.deleteUser}>Delete</Delete>;\r\n// \t}\r\n// }\r\n\r\n// class SpeakersList extends Component {\r\n// \tconstructor(props) {\r\n// \t\tsuper(props);\r\n// \t\tconsole.log(\"props : \" + props);\r\n\r\n// \t\tthis.state = {\r\n// \t\t\tspeakers: [],\r\n// \t\t\tcolumns: [],\r\n// \t\t\tisLoading: false,\r\n// \t\t};\r\n// \t}\r\n\r\n// \tcomponentDidMount = async () => {\r\n// \t\tthis.setState({ isLoading: true });\r\n// \t\tawait api.getAllSpeakers().then(speakers => {\r\n// \t\t\tconsole.log(speakers.data.data);\r\n\r\n// \t\t\tthis.setState({\r\n// \t\t\t\tspeakers: speakers.data.data,\r\n// \t\t\t\tisLoading: false,\r\n// \t\t\t});\r\n// \t\t\tconsole.log(this.state.speakers[0]);\r\n// \t\t});\r\n// \t};\r\n\r\n// \trender() {\r\n// \t\tconst { speakers, isLoading } = this.state;\r\n// \t\tconsole.log(\"props : \" + this.props);\r\n\r\n// \t\tconst columns = [\r\n// \t\t\t{\r\n// \t\t\t\tHeader: \"ID\",\r\n// \t\t\t\taccessor: \"_id\",\r\n// \t\t\t\tfilterable: true,\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tHeader: \"Name\",\r\n// \t\t\t\taccessor: \"name\",\r\n// \t\t\t\tfilterable: true,\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tHeader: \"User Name\",\r\n// \t\t\t\taccessor: \"UserName\",\r\n// \t\t\t\tfilterable: true,\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tHeader: \"Email\",\r\n// \t\t\t\taccessor: \"email\",\r\n// \t\t\t\tfilterable: true,\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tHeader: \"Age\",\r\n// \t\t\t\taccessor: \"age\",\r\n// \t\t\t\tfilterable: true,\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tHeader: \"Street\",\r\n// \t\t\t\taccessor: \"street\",\r\n// \t\t\t\tfilterable: true,\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tHeader: \"City\",\r\n// \t\t\t\taccessor: \"city\",\r\n// \t\t\t\tfilterable: true,\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tHeader: \"Building\",\r\n// \t\t\t\taccessor: \"building\",\r\n// \t\t\t\tfilterable: true,\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tHeader: \"\",\r\n// \t\t\t\taccessor: \"\",\r\n// \t\t\t\tCell: function(props) {\r\n// \t\t\t\t\treturn (\r\n// \t\t\t\t\t\t<span>\r\n// \t\t\t\t\t\t\t<DeleteSpeaker id={props.original._id} />\r\n// \t\t\t\t\t\t</span>\r\n// \t\t\t\t\t);\r\n// \t\t\t\t},\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tHeader: \"\",\r\n// \t\t\t\taccessor: \"\",\r\n// \t\t\t\tCell: function(props) {\r\n// \t\t\t\t\treturn (\r\n// \t\t\t\t\t\t<span>\r\n// \t\t\t\t\t\t\t<UpdateSpeaker id={props.original._id} />\r\n// \t\t\t\t\t\t</span>\r\n// \t\t\t\t\t);\r\n// \t\t\t\t},\r\n// \t\t\t},\r\n// \t\t];\r\n\r\n// \t\tconsole.log(this.state.speakers);\r\n\r\n// \t\tlet showTable = true;\r\n// \t\tif (!speakers.length) {\r\n// \t\t\tshowTable = false;\r\n// \t\t\tconsole.log(\"false\");\r\n// \t\t\treturn (<div>false</div>);\r\n// \t\t}\r\n// \t\tconsole.log(this.state.speakers);\r\n// \t\tconsole.log(columns);\r\n\r\n// \t\treturn (\r\n// \t\t\t<Wrapper>\r\n// \t\t\t\t{showTable && (\r\n// \t\t\t\t\t<ReactTable\r\n// \t\t\t\t\t\tdata={speakers}\r\n// \t\t\t\t\t\tcolumns={columns}\r\n// \t\t\t\t\t\tloading={isLoading}\r\n// \t\t\t\t\t\tdefaultPageSize={10}\r\n// \t\t\t\t\t\tshowPageSizeOptions={true}\r\n// \t\t\t\t\t\tminRows={0}\r\n// \t\t\t\t\t/>\r\n// \t\t\t\t)}\r\n// \t\t\t</Wrapper>\r\n// \t\t);\r\n// \t}\r\n// }\r\n\r\n// export default SpeakersList;\r\n"]},"metadata":{},"sourceType":"module"}